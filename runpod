FROM runpod/pytorch:2.4.0-py3.11-cuda12.4.1-devel-ubuntu22.04
ARG DEBIAN_FRONTEND=noninteractive


# Set the working directory
WORKDIR /

ENV TORCH_CUDA_ARCH_LIST=8.0;8.6;8.7;8.9


RUN apt update \
 && apt-get install -yq --no-install-recommends \
    python3 \
    python3-dev \
    python3-pip \
    git \
    curl \
    ninja-build \
    build-essential \
    libgl1-mesa-dev \
    libx11-dev \
    libxi-dev \
    libxext-dev \
    libxxf86vm-dev \
    libxrandr-dev \
    libxinerama-dev \
    libxcursor-dev \
    libopenexr-dev \
    libomp-dev \
    cmake \
    libgl1 \
    libglib2.0-0 \
    libxrender1 \
    libsm6 \
    libxext6 \
    && rm -rf /var/lib/apt/lists/*

# Update pip
RUN pip install --upgrade pip

# BASIC
RUN pip install \
    pillow \
    imageio \
    imageio-ffmpeg \
    tqdm easydict \
    opencv-python-headless \
    scipy ninja \
    onnxruntime \
    trimesh xatlas \
    pyvista pymeshfix \
    igraph \
    transformers \
    rembg \
    pydantic

RUN pip install torch==2.4.1+cu124 torchvision --index-url https://download.pytorch.org/whl/cu124

RUN pip install git+https://github.com/EasternJournalist/utils3d.git@9a4eb15e4021b67b12c460c7057d642626897ec8

RUN pip install --ignore-installed open3d

RUN pip install xformers==0.0.28.post1 --index-url https://download.pytorch.org/whl/cu124 && \
    pip install flash-attn && \
    pip install git+https://github.com/NVlabs/nvdiffrast.git

RUN pip install kaolin==0.17.0 -f https://nvidia-kaolin.s3.us-east-2.amazonaws.com/torch-2.4.1_cu124.html 
    
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
ENV CXXFLAGS="-std=c++17"


# DIFFOCTREERAST b09c20b
RUN git clone --recurse-submodules https://github.com/JeffreyXiang/diffoctreerast.git /tmp/extensions/diffoctreerast \
 && pip install /tmp/extensions/diffoctreerast

# MIPGAUSSIAN e3a68d0
RUN git clone https://github.com/autonomousvision/mip-splatting.git /tmp/extensions/mip-splatting \
 && pip install /tmp/extensions/mip-splatting/submodules/diff-gaussian-rasterization/

# VOX2SEQ
COPY extensions/vox2seq /tmp/extensions/vox2seq
RUN pip install /tmp/extensions/vox2seq


# SPCONV 2.3.6
RUN pip install spconv-cu120 \
    notebook==6.5.5


RUN jupyter contrib nbextension install --user && \
    jupyter nbextension enable --py widgetsnbextension


WORKDIR /workspace

COPY trellis ./trellis 

COPY TRELLIS-image-large ./TRELLIS-image-large

# COPY TRELLIS-text-base ./TRELLIS-text-base

# COPY TRELLIS-text-large ./TRELLIS-text-large

# COPY TRELLIS-text-xlarge ./TRELLIS-text-xlarge

RUN mkdir /Volume

VOLUME ["/Volume"]





# docker build -t trellis .
# docker run --runtime=nvidia --rm -it -u $(id -u):$(id -g) -p 7860:7860 -v $(realpath ~)/.cache/huggingface:/home/user/.cache/huggingface -v $(pwd):/workdir trellis

# Powershell version:
# docker run --gpus all --rm -it -p 7860:7860 -v "${env:USERPROFILE}\.cache\huggingface:/home/user/.cache/huggingface" -v "${PWD}:/workdir" trellis

# has to be run from within the container (needs the nvidia container runtime):
# pip install diso rembg